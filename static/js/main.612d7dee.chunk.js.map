{"version":3,"sources":["components/Header.js","components/Footer.js","components/Card.js","contexts/CurrentUserContext.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","utils/Api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","contexts/InitialCardsContext.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","href","Footer","Card","currentUser","card","onCardClick","onCardLike","onCardDelete","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","like","cardLikeButtonClassName","src","link","alt","name","onClick","length","CurrentUserContext","React","createContext","Main","onEditProfile","onAddPlace","onEditAvatar","cards","useContext","avatar","about","map","key","PopupWithForm","title","inputSignature","children","isOpen","onClose","onSubmit","noValidate","type","ImagePopup","toLowerCase","api","url","headers","this","fetch","then","res","ok","json","Promise","reject","status","data","method","body","JSON","stringify","cardId","Authorization","EditProfilePopup","onUpdateUser","useState","firstName","setFirstName","description","setDescription","useEffect","evt","preventDefault","defaultValue","onChange","e","target","value","id","required","pattern","placeholder","minLength","maxLength","EditAvatarPopup","onUpdateAvatar","imageRef","useRef","current","ref","AddPlacePopup","nameRef","linkRef","InitialCardsContext","App","setCurrentUser","setCards","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","all","getInfoUser","getInitialCards","userData","cardsFromApi","catch","err","console","log","Provider","deleteLikeCard","putLikeCard","newCard","newCards","currentCard","deleteCard","filter","editProfile","finally","dataNewCard","addCard","addNewCard","changeAvatar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.612d7dee.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header () {\r\n    return (\r\n        <header className=\"header\">\r\n            <a href=\"###\" className=\"header__logo\">logo</a>\r\n        </header>\r\n    )\r\n}\r\n\r\n export default Header;","import React from 'react';\r\n\r\nfunction Footer () {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2020. Абросимов Виктор</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer; ","import React from 'react'\r\n\r\nfunction Card ({\r\n                currentUser, \r\n                card, \r\n                onCardClick, \r\n                onCardLike,\r\n                onCardDelete\r\n              }) \r\n{\r\n\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner._id === currentUser._id;\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = (\r\n    `${isOwn ? 'card__btn-delete' : 'card__btn-delete_hidden'}`\r\n  );\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some(like => like._id === currentUser._id);\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = (\r\n    `${isLiked ? 'btn-image btn-image_like btn-image_like_active' : 'btn-image btn-image_like'}`\r\n    ); \r\n\r\n  function handleClick() {\r\n    onCardClick(card.name, card.link)\r\n  }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={card.link} alt={`карточка с изображением ${card.name}`} className=\"card__image\" onClick={handleClick} />\r\n            <button className={cardDeleteButtonClassName} onClick={() => onCardDelete(card)}>\r\n              <div className=\"btn-image btn-image_delete\"></div>\r\n            </button>\r\n            <div className=\"card__info\">\r\n              <h2 className=\"card__title\">{card.name}</h2>\r\n              <div className=\"card__block-like\">\r\n                <button className=\"card__btn-like\" onClick={() => onCardLike(card)}>\r\n                  <div className={cardLikeButtonClassName}></div>\r\n                </button>\r\n                <span className=\"card__count-like\">{card.likes.length}</span>\r\n              </div>\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nexport const CurrentUserContext = React.createContext()","import React from 'react'\r\nimport Card from './Card.js'\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js'\r\n\r\nfunction Main ({\r\n                  onEditProfile, \r\n                  onAddPlace, \r\n                  onEditAvatar, \r\n                  onCardClick,\r\n                  cards,\r\n                  onCardLike,\r\n                  onCardDelete\r\n              }) \r\n{\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <main className=\"content\">\r\n          <section className=\"profile\">\r\n            <img src={currentUser.avatar} alt=\"Аватар\" className=\"profile__avatar\" onClick={onEditAvatar} />\r\n            <span className=\"profile__edit-avatar\"></span>\r\n            <div className=\"profile__info\">\r\n              <div className=\"profile__change-elem\">\r\n                <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n                <button className=\"profile__btn-edit\" onClick={onEditProfile}>\r\n                  <div className=\"btn-image btn-image_edit\"></div>\r\n                </button>\r\n              </div>\r\n              <p className=\"profile__signature\">{currentUser.about}</p>\r\n            </div>\r\n            <button className=\"profile__btn-plus\" onClick={onAddPlace}>\r\n                <div className=\"btn-image btn-image_plus\"></div>\r\n            </button>\r\n          </section>\r\n          <section className=\"cards\">\r\n            {cards.map((card) => \r\n              <Card key={card._id} card={card}\r\n                currentUser={currentUser}\r\n                onCardLike={onCardLike} \r\n                onCardDelete={onCardDelete} \r\n                onCardClick={onCardClick}\r\n              /> \r\n            )}\r\n          </section> \r\n      </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react'\r\n\r\nfunction PopupWithForm ({\r\n                          title, \r\n                          name, \r\n                          inputSignature, \r\n                          children, \r\n                          isOpen, \r\n                          onClose, \r\n                          onSubmit\r\n                        }) \r\n{\r\n    return (\r\n        <section className={`popup-${name} popup ${isOpen ? '' : 'popup_closed' }`}>\r\n        <form name={name} className=\"popup__container\" onSubmit={onSubmit} noValidate>\r\n          <span className=\"popup__close\" onClick={onClose} ></span>\r\n          <h2 className=\"popup__title\">{title}</h2>\r\n          {children}\r\n          <button type=\"submit\" className=\"popup__input-save\">\r\n            <p className=\"popup__text-color\">{inputSignature}</p>\r\n          </button>\r\n        </form>\r\n       </section>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm","import React from 'react'\r\n\r\nfunction ImagePopup ({onClose, card}) {\r\n    return (\r\n        <section className={`popup popup-image ${card.isOpen ? '' : 'popup_closed'}`}>\r\n          <div className=\"popup-image__container\">\r\n            <img src={card.link} alt={`Картинка с изображением ${card.name}`.toLowerCase()} className=\"popup-image__content\" />\r\n            <span className=\"popup__close\" onClick={onClose}></span>\r\n            <p className=\"popup-image__name\">{card.name}</p>\r\n          </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ImagePopup","class Api {\r\n  constructor({url, headers}) {\r\n    this.url = url;\r\n    this.headers = headers\r\n  }\r\n  getInfoUser() {\r\n    return fetch(`${this.url}users/me`, {headers: this.headers})\r\n    .then((res) => {\r\n      if(res.ok) {\r\n        return res.json()\r\n      }\r\n      return Promise.reject(`Что-то пошло не так: ошибка ${res.status}`)\r\n    })\r\n  }\r\n  getInitialCards() {\r\n    return fetch(`${this.url}cards`, {headers: this.headers})\r\n    .then(res => {\r\n      if(res.ok) {\r\n        return res.json()\r\n      }\r\n      return Promise.reject(`Сбой загрузки карточек: ошибка ${res.status}`)\r\n    })\r\n  }\r\n  editProfile(data) {\r\n    return fetch(`${this.url}users/me`, {\r\n      method: 'PATCH',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about\r\n      })\r\n    })\r\n    .then(res => {\r\n      if(res.ok) {\r\n        return res.json()\r\n      }\r\n      return Promise.reject(`Ошибка отправки данных на сервер: проблема ${res.status}`)\r\n    })\r\n  }\r\n  addCard(data) {\r\n    return fetch(`${this.url}cards`, {\r\n      method: 'POST',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link\r\n      })\r\n    })\r\n    .then(res => {\r\n      if(res.ok) {\r\n        return res.json()\r\n      }\r\n      return Promise.reject(`Ошибка отправки данных на сервер: проблема ${res.status}`)\r\n    })\r\n  }\r\n  deleteCard(cardId) {\r\n      return fetch(`${this.url}cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this.headers\r\n    })\r\n  }\r\n  putLikeCard(cardId) {\r\n      return fetch(`${this.url}cards/likes/${cardId}`, {\r\n        method: 'PUT',\r\n        headers: this.headers\r\n      })\r\n      .then(res => {\r\n        if(res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(`Не удалось поставить лайк карточки: ошибка ${res.status}`)\r\n      })\r\n  }\r\n  deleteLikeCard(cardId) {\r\n    return fetch(`${this.url}cards/likes/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this.headers\r\n    })\r\n    .then(res => {\r\n      if(res.ok) {\r\n        return res.json()\r\n      }\r\n      return Promise.reject(`Не удалось убрать лайк с карточки: ошибка ${res.status}`)\r\n    })\r\n  }\r\n  changeAvatar(data) {\r\n    return fetch(`${this.url}users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatar\r\n      })\r\n    })\r\n     .then(res => {\r\n      if(res.ok) {\r\n        return res.json()\r\n      }\r\n      return Promise.reject(`Ошибка отправки данных на сервер: проблема ${res.status}`)\r\n    })\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  url: 'https://mesto.nomoreparties.co/v1/cohort-12/',\r\n  headers: {\r\n    Authorization: '9bd0d0c4-e4a3-422a-9469-bb5b72a2dcf0',\r\n    'Content-Type': 'application/json'\r\n  }\r\n})\r\n\r\nexport default api\r\n","import React from 'react'\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js'\r\nimport PopupWithForm from './PopupWithForm.js'\r\n\r\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}) {\r\n    const [firstName, setFirstName] = React.useState('');\r\n    const [description, setDescription] = React.useState('')\r\n    const currentUser = React.useContext(CurrentUserContext)\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault()\r\n        onUpdateUser({\r\n            name: firstName,\r\n            about: description\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setFirstName(currentUser.name);\r\n        setDescription(currentUser.about)\r\n    }, [currentUser])\r\n\r\n    return (\r\n\r\n        <PopupWithForm \r\n            name=\"edit\" \r\n            title=\"Редактировать профиль\" \r\n            inputSignature=\"Сохранить\" \r\n            isOpen={isOpen} \r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <input \r\n                name=\"name\" \r\n                type=\"text\" \r\n                defaultValue={firstName} \r\n                onChange={(e) => setFirstName(e.target.value)} \r\n                className=\"popup__input popup__input-name\" \r\n                id='name-input' \r\n                required pattern=\"[A-Za-zА-Яа-я -]{2,40}\" \r\n                placeholder=\"Имя\" \r\n            />\r\n            <span className=\"popup__input-error\" id=\"name-input-error\" />\r\n            <input \r\n                name=\"about\" \r\n                type=\"text\" \r\n                defaultValue={description} \r\n                onChange={(e) => setDescription(e.target.value)} \r\n                className=\"popup__input popup__input-signature\" \r\n                id='signature-input' \r\n                required minLength='2' \r\n                maxLength='200' \r\n                placeholder=\"О себе\" \r\n            />\r\n            <span className=\"popup__input-error\" id=\"signature-input-error\" />\r\n        </PopupWithForm>\r\n    )\r\n}\r\nexport default EditProfilePopup","import React from 'react'\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js'\r\nimport PopupWithForm from './PopupWithForm.js'\r\n\r\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar}) {\r\n    const imageRef = React.useRef('')\r\n    const currentUser = React.useContext(CurrentUserContext)\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault()\r\n        onUpdateAvatar({\r\n            avatar: imageRef.current.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm \r\n            name=\"avatar\" \r\n            title=\"Обновить аватар\" \r\n            inputSignature=\"Сохранить\" \r\n            isOpen={isOpen} \r\n            onClose={onClose}\r\n            onSubmit={handleSubmit} \r\n        >\r\n            <input \r\n                name=\"avatar\" \r\n                ref={imageRef}\r\n                defaultValue={currentUser.avatar}\r\n                type=\"url\" \r\n                className=\"popup__input popup__input-signature\" \r\n                id='signature-input' \r\n                required \r\n                placeholder=\"Ссылка на картинку\" \r\n            />\r\n            <span className=\"popup__input-error\" id=\"signature-input-error\" />\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup","import React, { useRef } from 'react'\r\nimport PopupWithForm from './PopupWithForm.js'\r\n\r\nfunction AddPlacePopup({isOpen, onClose, onAddPlace}) {\r\n    const nameRef = useRef('')\r\n    const linkRef = useRef('')\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault()\r\n        onAddPlace({\r\n            name: nameRef.current.value,\r\n            link: linkRef.current.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm \r\n            name=\"place\" \r\n            title=\"Новое место\" \r\n            inputSignature=\"Создать\" \r\n            isOpen={isOpen} \r\n            onClose={onClose}\r\n            onSubmit={handleSubmit} \r\n        >\r\n            <input \r\n                name=\"name\" \r\n                ref={nameRef}\r\n                type=\"text\" \r\n                className=\"popup__input popup__input-name\" \r\n                id='name-input'   \r\n                required \r\n                pattern=\"[A-Za-zА-Яа-я -]{1,30}\" \r\n                placeholder=\"Название\" \r\n            />\r\n            <span className=\"popup__input-error\" id=\"name-input-error\"></span>\r\n            <input \r\n                name=\"link\" \r\n                type=\"url\" \r\n                ref={linkRef}\r\n                className=\"popup__input popup__input-signature\"   \r\n                id='signature-input' \r\n                required \r\n                placeholder=\"Ссылка на картинку\" \r\n            />\r\n            <span className=\"popup__input-error\" id=\"signature-input-error\"></span>\r\n        </PopupWithForm>\r\n    )\r\n}\r\nexport default AddPlacePopup","import React from 'react';\r\nexport const InitialCardsContext = React.createContext()","import React from 'react'\r\nimport Header from './Header.js'\r\nimport Footer from './Footer.js'\r\nimport Main from './Main.js'\r\nimport PopupWithForm from './PopupWithForm.js'\r\nimport ImagePopup from './ImagePopup.js'\r\nimport api from '../utils/Api.js';\r\nimport EditProfilePopup from './EditProfilePopup.js'\r\nimport EditAvatarPopup from './EditAvatarPopup.js'\r\nimport AddPlacePopup from './AddPlacePopup.js'\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js'\r\nimport { InitialCardsContext } from '../contexts/InitialCardsContext.js'\r\n\r\n\r\nfunction App() {\r\n\r\n  //информация о текущем пользователе\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [cards, setCards] = React.useState([]);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  //хук для поп-ап окна при нажатии на картинку\r\n  const [selectedCard, setSelectedCard] = React.useState({\r\n    isOpen: false,\r\n    name: '',\r\n    link: ''\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    Promise.all([api.getInfoUser(), api.getInitialCards()])\r\n    .then(([userData, cardsFromApi]) => {\r\n      setCurrentUser(userData);\r\n      setCards(cardsFromApi);\r\n    })\r\n    .catch(err => console.log(err))\r\n  }, [])\r\n\r\n  function handleAddPlaceSubmit(dataNewCard) {\r\n    console.log(dataNewCard)\r\n    api.addCard(dataNewCard)\r\n    .then((addNewCard) => {\r\n      setCards([...cards, addNewCard])\r\n    })\r\n    .catch(err => console.log(err))\r\n    .finally(closeAllPopups())\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    //проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\r\n    (!isLiked ? api.putLikeCard(card._id) : api.deleteLikeCard(card._id))\r\n    .then((newCard) => {\r\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n      const newCards = cards.map((currentCard) => currentCard._id === card._id ? newCard : currentCard);\r\n      // Обновляем стейт\r\n      setCards(newCards)\r\n    })\r\n    .catch(err => console.log(err)) \r\n  } \r\n\r\n  function handleCardDelete(card) {\r\n    api.deleteCard(card._id)\r\n    .then(() => {\r\n      const newCards = cards.filter((currentCard) => currentCard._id !== card._id)\r\n      setCards(newCards)\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  function handleUpdateUser(userData) {\r\n     api.editProfile(userData)\r\n    .then((data) => {\r\n      setCurrentUser(data)\r\n    })\r\n    .catch(err => console.log(err))\r\n    .finally(closeAllPopups()) \r\n  }\r\n\r\n  function handleUpdateAvatar(userData) {\r\n     api.changeAvatar(userData)\r\n    .then((data) => {\r\n      setCurrentUser(data)\r\n    })\r\n    .catch(err => console.log(err))\r\n    .finally(closeAllPopups()) \r\n  }\r\n\r\n  function handleCardClick(name, link) {\r\n    setSelectedCard({\r\n      isOpen: true,\r\n      name: name,\r\n      link: link\r\n    })\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true)\r\n  }\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true)\r\n  }\r\n  function handleAddPlaceClick () {\r\n    setIsAddPlacePopupOpen(true)\r\n  }\r\n\r\n  function closeAllPopups () {\r\n    setIsEditProfilePopupOpen(false)\r\n    setIsEditAvatarPopupOpen(false)\r\n    setIsAddPlacePopupOpen(false)\r\n    setSelectedCard({\r\n      isOpen: false,\r\n      name: '',\r\n      link: ''\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n      <InitialCardsContext.Provider value={cards}>\r\n        <Header />\r\n        <Main \r\n          onEditProfile={handleEditProfileClick} \r\n          onAddPlace={handleAddPlaceClick} \r\n          onEditAvatar={handleEditAvatarClick} \r\n          onCardClick={handleCardClick}\r\n          cards={cards}\r\n          onCardLike={handleCardLike}\r\n          onCardDelete={handleCardDelete}\r\n        />\r\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\r\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\r\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\r\n        <PopupWithForm name=\"delete\" title=\"Вы уверены?\" inputSignature=\"Да\" />\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n      </InitialCardsContext.Provider>\r\n      </CurrentUserContext.Provider>\r\n        <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}